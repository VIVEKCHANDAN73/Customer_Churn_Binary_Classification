name: mlops-ci-cd

on:
  push:
    branches: [ main ]
    tags:
      - "*"   # runs for all tags
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}


permissions:
  contents: write   # ðŸ‘ˆ gives GITHUB_TOKEN permission to push commits

jobs:
  ml_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: DVC Pull from Remote
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=us-east-1
          dvc pull --force

      - name: Run DVC Pipeline
        run: dvc repro

      - name: Commit updated dvc.lock
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add dvc.lock
          git diff --cached --quiet || git commit -m "Update dvc.lock after pipeline run"
          git push origin main || echo "Push failed (branch may be protected). Changes are committed locally."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: DVC Push Outputs
        run: dvc push

      - name: Register and Promote Model in MLflow
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: python scripts/register_model.py

      - name: Build Docker Image
        run: sudo docker build -t churn-mlflow-pyfunc:2.14.2 -f Dockerfile.deploy .

      - name: Tag & Push Docker Image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          sudo docker tag churn-mlflow-pyfunc:2.14.2 730335304698.dkr.ecr.us-east-1.amazonaws.com/churn-mlflow-pyfunc:2.14.2
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730335304698.dkr.ecr.us-east-1.amazonaws.com
          sudo docker push 730335304698.dkr.ecr.us-east-1.amazonaws.com/churn-mlflow-pyfunc:2.14.2

      - name: Deploy to SageMaker
        if: github.ref_type == 'tag'  # deploy only on tag
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          pip install mlflow boto3 botocore sagemaker
          mlflow deployments create \
            -t sagemaker \
            --name customer-churn-model \
            --model-uri models:/CustomerChurnModel/Production \
            --config region_name=us-east-1 \
            --config execution_role_arn=arn:aws:iam::730335304698:role/AmazonSageMaker-ExecutionRole-20250906\
            --config instance_type=ml.t2.medium \
            --config image_url="730335304698.dkr.ecr.us-east-1.amazonaws.com/churn-mlflow-pyfunc:2.14.2"


